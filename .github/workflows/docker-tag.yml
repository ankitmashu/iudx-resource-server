# This GitHub workflow will automatically update docker image tags of rs-depl in the datakaveri/iudx-deployment repository files, whenever a docker image is pushed to ghcr.io/datakaveri/rs-depl for the master/main branch.

name: Update RS docker image tags (Master)

# Trigger the workflow whenever a new package is published to the registry
on:
  registry_package:
    types: [published]

permissions:
  packages: read

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
        repository: datakaveri/iudx-deployment
        token: "${{ secrets.JENKINS_UPDATE }}"
        fetch-depth: 0

    # Update RS Server docker image tags for master/main branch
    - name: Update RS docker image tags for master/main
      env:
        GH_TOKEN: ${{ secrets.JENKINS_UPDATE }}
      run: |
        # Get the latest version of 5.6.0-alpha tags from the container registry using GitHub API
        export newtag5_6_0=$(head -n1 <(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/orgs/datakaveri/packages/container/rs-depl/versions | jq ' .[].metadata.container.tags[0]'  | grep 5.6.0-alpha | sed -e 's/^"//' -e 's/"$//'))

        # Get the old tag from the YAML file
        export oldtag5_6_0=$(yq -r .services.rs.image Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml | cut -d : -f 2)

        # Set Git user
        git config --global user.name 'jenkins-datakaveri'
        git config --global user.email "96175780+jenkins-datakaveri@users.noreply.github.com"

        # Update the YAML files and create a new branch for the tag update
        if [ "$newtag5_6_0" != "$oldtag5_6_0" ]
        then
          git checkout master
          git checkout -b rs-5.6.0-alpha-automatic-updates/$newtag5_6_0

          # Replace old tag with new tag in the rs-stack.yaml file
          sed -i s/$oldtag5_6_0/$newtag5_6_0/g Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml

          # Update version in Chart.yaml and values.yaml
          export oldappversion=$(yq -r .version K8s-deployment/Charts/resource-server/Chart.yaml)
          export newappversion=$(yq -r .version K8s-deployment/Charts/resource-server/Chart.yaml | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')

          sed -i s/$oldappversion/$newappversion/g K8s-deployment/Charts/resource-server/Chart.yaml
          sed -i s/$oldtag5_6_0/$newtag5_6_0/g K8s-deployment/Charts/resource-server/values.yaml
          
          git add Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml K8s-deployment/Charts/resource-server/values.yaml K8s-deployment/Charts/resource-server/Chart.yaml
          git commit --allow-empty -m "Updated RS docker image tag to $newtag5_6_0"
          git push --set-upstream origin rs-5.6.0-alpha-automatic-updates/$newtag5_6_0

          # Create a new pull request for the master branch
          gh pr create -R datakaveri/iudx-deployment --base master --fill 
        fi
